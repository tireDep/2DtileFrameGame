PrintLib.h => Print관련 함수들 헤더 모음
~5 : 헤더 선언(1회만)
7~12 : 열거형 상수 eStringType 선언
- TEXT = 0, BRANCH = 1, QUIT = 2
=> 스위치 문에서 분기를 설정할 수 있도록 열거형 상수 선언
14~20 : 문장관련 자료형 sString 선언
- 문자열 저장변수, 문장 속성변수, y/n 선택시의 분기값
=> 문장 자료형, 문장의 속성과 분기값을 가지고 있음
22~26 : 문단관련 자료형 sParagraph
- 문장 저장변수, 문장의 배열위치 변수
=> 문단 자료형, 문장을 저장할 변수와 문장배열의 위치판별 변수를 가지고 있음
<함수 헤더들>
28 : InitString(~,~,~)
- 입력한 문자열과 타입을 문장 자료형에 저장함
29 :  InitString(~,~,~,~,~)
- InitString 오버로딩 함수
- 분기문에서 사용함(분기값 입력)
30 : AddStringToParagraph(~,~)
- 문단에 문장삽입
32 : PrintParagraph(~)
- 문단 출력
- 문장의 속성에 따라서 다음 행동이 결정됨
33 : PrintText(~) 
- 문장 출력 

----------------------------------------------------------------------------------------------------------------------

Basic.h => 기본 제공 헤더들 모음
~6 : 헤더 선언(1회만)
8~12 : 기본 제공 헤더들 

----------------------------------------------------------------------------------------------------------------------

PrintLib.cpp => Print관련 함수들 실 구현
~2 : 헤더들 포함
3~7 : InitString() 구현
- 인자 : 문장 변수, 문자열 변수, 문장의 속성
- 문장 변수 中 속성에 문장의 속성 저장
- 문장 변수 中 문자열에 문자열 변수 내용 복사(strcpy 사용)
9~14 : InitString() 구현
- 인자 :  문장 변수, 문자열 변수, 문장의 속성, 문단 분기1, 문단 분기2
=> 오버로딩 함수
- 입력받은 내용을 InitString()함수로 실행
- 문장 분기1에 中 분기변수에 분기값 저장
- 문장 분기2에 中 분기변수에 분기값 저장
16~20 : AddStringParagraph() 구현
- 인자 : 문단 변수, 문장 변수
- 문단 변수 中 문장배열에 [문단 변수 中 배열위치변수]에 문장을 저장
- 문단 변수 中 배열위치변수를 1증가 시킴
22~56 : PrintParagraph() 구현
- 인자 : 문단 변수
- 읽어온 문장의 속성에 따라서 일반/분기문/종료로 출력 실행
1) 일반 -> 문장 출력
2) 분기문 -> 문장 출력, 입력한 분기에 따라서 문단변수 中 문장변수의 분기문을 반환함
3) 종료 -> 문장 출력, 음수값 반환
58~62 : PrintText() 구현
- 인자 : 문자열(문장변수가 가지고 있는 문자열)
- 문장을 출력함

----------------------------------------------------------------------------------------------------------------------

main.cpp => 실제 프로그램이 실행되는 부분
~3 : 헤더 삽입
5~57 : main함수
- 5 : 메인함수
- 7 : 처음 출력할 문단 표시
- 8 : while문 선언
- 10 : 문장 변수 선언
- 11~12 : InitString()를 사용해서 문자열과 문자열의 속성, 분기변수 등을 문장에 저장
- 13 : 문단 변수 선언
- 14 : 문단 변수 中 문장 배열 위치 변수를 0으로 초기화
- 15~16 : AddStringToParagraph()를 사용해서 문단 변수에 문장 저장
=> 한 문단 생성 완료
- 18~36 : 같은 방법으로 문단을 생성함
- 38 : 문단 변수를 선언해서 모든 문단변수를 모음
- 39 : 다음에 출력할 문단표시 변수 선언, 0으로 초기화
- 40~46 : 전체 문단개수보다 문단 숫자가 작을 경우, PrintParagraph()를 실행함 / 아닐 경우 에러 메시지 출력
- 48~53 : 다음에 출력할 문단변수가 음수일경우 종료 / 아닐 경우 문단 표시 변수에 문단 변수 대입
- 54 : while문 끝
- 55~57 : 프로그램 종료