0721
* 오늘의 할 일
1) 객체지향 이론
2&3) 자습 : 스토리 구성 및 게임 완성
4) 다음 프로젝트 시작

* 객체지향
- 객체 : 프로그램 세계에서 살아숨쉬는 모든 것(class로 만든 모든 것)
- 통제불능(통제를 벗어나게) -> 독립적(내가 다 가지고 있어야 함 / 데이터, 기능) => 혼자서 행동하는데 필요한 모든 것
=> 캡슐화 등장 
- 객체지향 3요소
캡슐화(핵심) / 상속 / 다형성
=> 3요소, 5대원칙 다 지켜도 캡슐화 벗어나면 의미 없음
- 캡슐화 : 데이터 + 기능 <- class => 재활용성 증가 => 더 큰 프로젝트 생성 가능
- 다형성 : 편하게 하나만 사용 -> (객체) 결과는 각자 알아서(행동 다르게) => 상속이 중요한 개념!
==> 재활용 : 한번 만들고 여러곳에서 사용함(모듈 느낌)
 ex) 퀘이크(절차지향...)->Tech Six로 이름 바뀐듯, 언리얼(퀘이크보다는 성능 떨어지지만 객체지향 사용해서 재활용성 좋아짐), 유니티 엔진 등(오브젝트를 끌어다 놓기만 하면 사용할 수 있음 / 언리얼보다 성능은 떨어지지만 재활용성 극대화)

* 주의하기!!
- git에 올릴때 .vcxproj로 써있는거도 함께 올려야지 실행됨!!!
// 어쩐지 계속 에러나드라..

* 참고사항
- #include"" 사용보다는 전방선언으로 해결하는 것이 좋음!
- 원칙을 지킨다는 가정하에서만 해더파일을 적용하는건데, 에러 가능성이 높음(상속 주의!!)
=> 의존성 역전의 법칙
- c#, java에서는 자동화 됨

- if문, switch문 최대한 없애는게 좋음!

* 게임 만들기위해 알아야 할 것
- 절차 -> 객체 : 좀더 큰 게임 만들 준비가 됨(여러개의 객체가 상호작용함)
- 다음 프로젝트 완료시 : 제대로된 게임을 만들기 위한 시작점에 위치하게 됨(게임의 구조, 컴포넌트) => 로직(컴포넌트), 움직임(AI - 길찾기), 상호작용
==> 어떤 게임을 보더라도 어떤식으로 구성되는지는 알 수 있게 됨
- 다음부터는 개인 노력(분야가 갈림) -> 연구가 필요

* 다음 프로젝트 관련
- 타일맵(격자맵), 캐릭터, 장애물, 적 존재
- 키보드 입력 시 움직여서 공격 -> 마우스로 클릭하면 알아서 가서 공격(장애물 알아서 피하고, 가장 빠른 길 탐색)
- NPC랑 마주쳤을 시 행동 변경
// 왠지 응용해서 타워디펜스같은거로 해도 괜찮을듯? 마우스 클릭하면 센터에서 공격이 날아가고 장애물을 생성/삭제하거나 공격 업그레이드 등 이런거를 NPC한테서 하고 이런식으로? 하는거도 나쁘지 않을거 같음
- 윈도우 프로그래밍, 다이렉트x 등 다룰듯//콘솔 졸업이다!!

* 콘웨이의 생명 게임