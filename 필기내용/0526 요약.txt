0526 요약
* struct vs array
- struct : 같은 성격의 자료 모음
- array : 같은 자료 모음

* 도움함수
- void InitString(sString* string, const char* text)
- void AddStringToParagraph(sParagraph* paragraph, sString* text) 
=> 편하려고 쓰는 것(자동화)

* 포인터
- '*' : 포인터 키워드
- 포인터 : 책상, 값 : 학생 => 메모리관리에 유리함
- 함수에 변수 넘길때 : 함수에 값을 복사해서 가져감(call by value) // 값에 의한 호출
 => 원래값 변동 x
 => 메모리 부족 문제
- 함수에 포인터 넘길때 : 함수에 주소값을 복사해서 가져감(call by reference)	// 참조에 의한 호출
 => 원래값 변동 o
 => 포인터 사용 : 데이터 크기만 사용하고 성능 up(크기 down), 데이터 크기가 커질 때 사용 
  ==> 자료가 많아 질 때 : ex) char c; char c[1000];
  ==> 구조체 사용할 때 
// java, c#은 알아서 바꿔줌... 좋은 언어다.. 그리고 난 이걸 배우고 있지.

+) 구조체 vs 클래스 차이 찾아보기
- private 유무인듯?
- 둘다 함수선언&실행 가능

요약 => 구조체, 구조체 도움함수